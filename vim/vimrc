" Turn on pathogen for easier plugin management
call pathogen#infect()
call pathogen#helptags()


set nocompatible

" Character-encoding related settings early (before any other settings)
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,big5,euc-jp,gbk,euc-kr,utf-bom,iso8859-1,euc-jp,utf-16le,latin1
set fileencoding=utf-8 encoding=utf-8 termencoding=utf-8



set t_Co=256
syntax on
syntax enable
let g:solarized_termcolors=256
colorscheme solarized
set background=dark
set background=light


set splitright				" always open vertical split window in the right side
set splitbelow				" always open horizontal split window below


set laststatus=2			" Plugin: Powerline
set showtabline=2

set number
set cursorline

" Search-related settings
set ignorecase
set smartcase
set hlsearch
set incsearch

" Backups & Files
set backup				" Enable creation of backup file.
set backupdir=~/.vim/backups		" Where backups will go.
set directory=~/.vim/tmp		" Where temporary files (*.swp) will go.


set wildmode=longest,list		" use emacs-style tab completion when selecting files, etc
"set wildmenu				" make tab completion for files/buffers act like bash

set listchars=tab:▶\ ,eol:¬		" Use the same symbols as TextMate for tabstops and EOLs

" Default tabs & spaces
set tabstop=8 softtabstop=8 shiftwidth=8 noexpandtab


if has("autocmd")
	" enable filetype-specific detection/plug-in/indenting
	filetype plugin indent on	

	" * cursorline switched while focus is switched to another split window
	" ------------------------------------
	autocmd WinEnter * setlocal cursorline
	autocmd WinLeave * setlocal nocursorline

	" Source the vimrc file after saving it
	" ------------------------------------
	autocmd BufWritePost .vimrc source $MYVIMRC
endif


" ===================================================================
" Variable settings
" ===================================================================

" * Plugin: Powerline
" ------------------------------------
let g:Powerline_symbols='unicode'
let g:Powerline_colorscheme = 'solarized256'

" * Plugin: Taglist
" ------------------------------------
let Tlist_WinWidth=40
let Tlist_GainFocus_On_ToggleOpen=1

" * Plugin: NERDTree
" ------------------------------------
let NERDTreeDirArrows=1
let g:NERDTreeWinSize=30

" * Plugin: Surround
" ------------------------------------
"Create my custom surround for A
let g:surround_65 = "<a href=\"\">\r</a>"

" * Syntax: Ruby
" ------------------------------------
"let ruby_fold=1


" ===================================================================
" Key bindings
" ===================================================================

" * abandom the habit of using arrow key
" ------------------------------------
map <Up> <Nop>
map <Down> <Nop>
map <Left> <Nop>
map <Right> <Nop>
inoremap <Up> <Nop>
inoremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>

" * Bash-style line editing in command-line mode
" ------------------------------------
cmap <C-A> <Home>
cmap <C-E> <End>

" * quickly load up my vimrc file
" ------------------------------------
nmap <leader>v :tabedit $MYVIMRC<CR>

" * quickly toggle between showing/hiding invisible characters
" ------------------------------------
nmap <leader>l :set list!<CR>

" * add a side-effect of clearing search highlight to <C-l> (Clear screen)
" ------------------------------------
nnoremap <silent> <C-L> :<C-U>nohlsearch<CR><C-L>

" * speed up fold expanding/collapsing by mapping it to <Space>
" ------------------------------------
nnoremap <silent> <Space> za

" * Plugin: quick access to plugin functionalities
" ------------------------------------
nnoremap <silent> <F2> :NERDTreeMirrorToggle<CR>
map <silent> <F4> :TlistToggle<CR>
